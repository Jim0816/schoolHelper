<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.school.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<!-- 配置c3p0连接池 -->
	<context:property-placeholder location="WEB-INF/c3p0.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    	<!-- 注入属性值 -->
    	<property name="driverClass" value="${driverClass}"></property>
    	<property name="jdbcUrl" value="${url}"></property>
    	<property name="user" value="${user}"></property>
    	<property name="password" value="${pwd}"></property>
        <!-- 连接池初始化时创建的连接数 --> 
        <property name="initialPoolSize" value="${initialPoolSize}"></property>  
        <!-- 连接池在无空闲连接可用时一次性创建的新数据库连接数,default:3 --> 
        <property name="acquireIncrement" value="${acquireIncrement}"></property>  
	    <!-- 连接的最大空闲时间，超过这个时间，某个数据库连接还没有被使用，则会断开掉这个连接。如果为0，则永远不会断开连接,即回收此连接。default: 0 单位 s --> 
	    <property name="maxIdleTime" value="${maxIdleTime}"></property>  
	    <!-- 连接池保持的最大连接数 --> 
	    <property name="maxPoolSize" value="${maxPoolSize}"></property> 
	    <!-- 连接池保持的最小连接数 --> 
	    <property name="minPoolSize" value="${minPoolSize}"></property>
	    <!--连接关闭时默认将所有未提交的操作回滚。Default: false -->   
	    <!-- <property name="autoCommitOnClose" value="false"></property>    	 -->
    </bean>
	
	
	<!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入事件源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 开启事务注解 -->
    <!-- 该方法比较简介，但是需要在方法所在类的上面写上@Transactional  表示该类中所有方法均可事务处理 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
  
	<bean id="jdbcTemplate"  class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource" ref="dataSource"></property>  
	</bean>  
    
<!--配置 JPA 的 EntityManagerFactory
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>	
		<property name="packagesToScan" value="com.atguigu.sssp"></property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
		<property name="sharedCacheMode" value="ENABLE_SELECTIVE"></property>
	</bean>
	 -->
	<!-- 配置事务
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>	
	</bean>
	
	配置支持基于注解的事务
	<tx:annotation-driven transaction-manager="transactionManager"/>
	 -->
	<!-- 配置 SpringData
	<jpa:repositories base-package="com.atguigu.sssp"
		entity-manager-factory-ref="entityManagerFactory"></jpa:repositories> -->
		
		
	
</beans>
